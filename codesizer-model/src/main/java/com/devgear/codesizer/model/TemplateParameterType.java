package com.devgear.codesizer.model;

// Generated 24-oct-2011 0:54:57 by Hibernate Tools 3.4.0.CR1

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * TemplateParameterType generated by hbm2java
 */
@Entity
@Table(name = "t_parameter_types", schema = "public")
public class TemplateParameterType implements java.io.Serializable {

	private int idParameterType;
	private String name;
	private Set<TemplateParameter> templateParameters = new HashSet<TemplateParameter>(
			0);
	private Set<TemplateProjectType> templateProjectTypes = new HashSet<TemplateProjectType>(
			0);

	public TemplateParameterType() {
	}

	public TemplateParameterType(int idParameterType) {
		this.idParameterType = idParameterType;
	}

	public TemplateParameterType(int idParameterType, String name,
			Set<TemplateParameter> templateParameters,
			Set<TemplateProjectType> templateProjectTypes) {
		this.idParameterType = idParameterType;
		this.name = name;
		this.templateParameters = templateParameters;
		this.templateProjectTypes = templateProjectTypes;
	}

	@Id
	@Column(name = "id_parameter_type", unique = true, nullable = false)
	public int getIdParameterType() {
		return this.idParameterType;
	}

	public void setIdParameterType(int idParameterType) {
		this.idParameterType = idParameterType;
	}

	@Column(name = "name", length = 50)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "templateParameterType")
	public Set<TemplateParameter> getTemplateParameters() {
		return this.templateParameters;
	}

	public void setTemplateParameters(Set<TemplateParameter> templateParameters) {
		this.templateParameters = templateParameters;
	}

	@ManyToMany(fetch = FetchType.LAZY, mappedBy = "templateParameterTypes")
	public Set<TemplateProjectType> getTemplateProjectTypes() {
		return this.templateProjectTypes;
	}

	public void setTemplateProjectTypes(
			Set<TemplateProjectType> templateProjectTypes) {
		this.templateProjectTypes = templateProjectTypes;
	}

}
