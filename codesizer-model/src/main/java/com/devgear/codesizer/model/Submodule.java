package com.devgear.codesizer.model;

// Generated 24-oct-2011 0:54:57 by Hibernate Tools 3.4.0.CR1

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Submodule generated by hbm2java
 */
@Entity
@Table(name = "submodules", schema = "public")
public class Submodule implements java.io.Serializable {

	private int idSubmodule;
	private Project project;
	private Module module;
	private String name;
	private Set<Task> tasks = new HashSet<Task>(0);

	public Submodule() {
	}

	public Submodule(int idSubmodule, Project project, Module module,
			String name) {
		this.idSubmodule = idSubmodule;
		this.project = project;
		this.module = module;
		this.name = name;
	}

	public Submodule(int idSubmodule, Project project, Module module,
			String name, Set<Task> tasks) {
		this.idSubmodule = idSubmodule;
		this.project = project;
		this.module = module;
		this.name = name;
		this.tasks = tasks;
	}

	@Id
	@Column(name = "id_submodule", unique = true, nullable = false)
	public int getIdSubmodule() {
		return this.idSubmodule;
	}

	public void setIdSubmodule(int idSubmodule) {
		this.idSubmodule = idSubmodule;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_project", nullable = false)
	public Project getProject() {
		return this.project;
	}

	public void setProject(Project project) {
		this.project = project;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_module", nullable = false)
	public Module getModule() {
		return this.module;
	}

	public void setModule(Module module) {
		this.module = module;
	}

	@Column(name = "name", nullable = false, length = 50)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "submodule")
	public Set<Task> getTasks() {
		return this.tasks;
	}

	public void setTasks(Set<Task> tasks) {
		this.tasks = tasks;
	}

}
