package com.devgear.codesizer.model;

// Generated 24-oct-2011 0:54:57 by Hibernate Tools 3.4.0.CR1

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * ProjectTypeFeatureTypes generated by hbm2java
 */
@Entity
@Table(name = "project_type_feature_types", schema = "public")
public class ProjectTypeFeatureTypes implements java.io.Serializable {

	private ProjectTypeFeatureTypesId id;
	private ProjectType projectType;
	private FeatureType featureType;
	private Integer estimatedUnits;

	public ProjectTypeFeatureTypes() {
	}

	public ProjectTypeFeatureTypes(ProjectTypeFeatureTypesId id,
			ProjectType projectType, FeatureType featureType) {
		this.id = id;
		this.projectType = projectType;
		this.featureType = featureType;
	}

	public ProjectTypeFeatureTypes(ProjectTypeFeatureTypesId id,
			ProjectType projectType, FeatureType featureType,
			Integer estimatedUnits) {
		this.id = id;
		this.projectType = projectType;
		this.featureType = featureType;
		this.estimatedUnits = estimatedUnits;
	}

	@EmbeddedId
	@AttributeOverrides({
			@AttributeOverride(name = "idProjectType", column = @Column(name = "id_project_type", nullable = false)),
			@AttributeOverride(name = "idFeatureType", column = @Column(name = "id_feature_type", nullable = false)) })
	public ProjectTypeFeatureTypesId getId() {
		return this.id;
	}

	public void setId(ProjectTypeFeatureTypesId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_project_type", nullable = false, insertable = false, updatable = false)
	public ProjectType getProjectType() {
		return this.projectType;
	}

	public void setProjectType(ProjectType projectType) {
		this.projectType = projectType;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_feature_type", nullable = false, insertable = false, updatable = false)
	public FeatureType getFeatureType() {
		return this.featureType;
	}

	public void setFeatureType(FeatureType featureType) {
		this.featureType = featureType;
	}

	@Column(name = "estimated_units")
	public Integer getEstimatedUnits() {
		return this.estimatedUnits;
	}

	public void setEstimatedUnits(Integer estimatedUnits) {
		this.estimatedUnits = estimatedUnits;
	}

}
