package com.devgear.codesizer.model;

// Generated 24-oct-2011 0:54:57 by Hibernate Tools 3.4.0.CR1

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Project generated by hbm2java
 */
@Entity
@Table(name = "projects", schema = "public")
public class Project implements java.io.Serializable {

	private int idProject;
	private Activity activity;
	private ProjectType projectType;
	private Client client;
	private ProjectStates projectStates;
	private String name;
	private Integer realUnits;
	private Set<Submodule> submodules = new HashSet<Submodule>(0);
	private Set<ProjectExtraTasks> projectExtraTaskses = new HashSet<ProjectExtraTasks>(
			0);
	private Set<Module> modules = new HashSet<Module>(0);
	private Set<Task> tasks = new HashSet<Task>(0);
	private Set<Subsystems> subsystemses = new HashSet<Subsystems>(0);

	public Project() {
	}

	public Project(int idProject, Activity activity, ProjectType projectType,
			Client client, ProjectStates projectStates, String name) {
		this.idProject = idProject;
		this.activity = activity;
		this.projectType = projectType;
		this.client = client;
		this.projectStates = projectStates;
		this.name = name;
	}

	public Project(int idProject, Activity activity, ProjectType projectType,
			Client client, ProjectStates projectStates, String name,
			Integer realUnits, Set<Submodule> submodules,
			Set<ProjectExtraTasks> projectExtraTaskses, Set<Module> modules,
			Set<Task> tasks, Set<Subsystems> subsystemses) {
		this.idProject = idProject;
		this.activity = activity;
		this.projectType = projectType;
		this.client = client;
		this.projectStates = projectStates;
		this.name = name;
		this.realUnits = realUnits;
		this.submodules = submodules;
		this.projectExtraTaskses = projectExtraTaskses;
		this.modules = modules;
		this.tasks = tasks;
		this.subsystemses = subsystemses;
	}

	@Id
	@Column(name = "id_project", unique = true, nullable = false)
	public int getIdProject() {
		return this.idProject;
	}

	public void setIdProject(int idProject) {
		this.idProject = idProject;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_principal_activity", nullable = false)
	public Activity getActivity() {
		return this.activity;
	}

	public void setActivity(Activity activity) {
		this.activity = activity;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_project_type", nullable = false)
	public ProjectType getProjectType() {
		return this.projectType;
	}

	public void setProjectType(ProjectType projectType) {
		this.projectType = projectType;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_client", nullable = false)
	public Client getClient() {
		return this.client;
	}

	public void setClient(Client client) {
		this.client = client;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_project_state", nullable = false)
	public ProjectStates getProjectStates() {
		return this.projectStates;
	}

	public void setProjectStates(ProjectStates projectStates) {
		this.projectStates = projectStates;
	}

	@Column(name = "name", nullable = false, length = 50)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "real_units")
	public Integer getRealUnits() {
		return this.realUnits;
	}

	public void setRealUnits(Integer realUnits) {
		this.realUnits = realUnits;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "project")
	public Set<Submodule> getSubmodules() {
		return this.submodules;
	}

	public void setSubmodules(Set<Submodule> submodules) {
		this.submodules = submodules;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "project")
	public Set<ProjectExtraTasks> getProjectExtraTaskses() {
		return this.projectExtraTaskses;
	}

	public void setProjectExtraTaskses(
			Set<ProjectExtraTasks> projectExtraTaskses) {
		this.projectExtraTaskses = projectExtraTaskses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "project")
	public Set<Module> getModules() {
		return this.modules;
	}

	public void setModules(Set<Module> modules) {
		this.modules = modules;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "project")
	public Set<Task> getTasks() {
		return this.tasks;
	}

	public void setTasks(Set<Task> tasks) {
		this.tasks = tasks;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "project")
	public Set<Subsystems> getSubsystemses() {
		return this.subsystemses;
	}

	public void setSubsystemses(Set<Subsystems> subsystemses) {
		this.subsystemses = subsystemses;
	}

}
