package com.devgear.codesizer.core.view;

import com.devgear.codesizer.core.util.ApplicationHolder;
import com.devgear.codesizer.template.view.TemplateActivitiesPanel;
import com.vaadin.annotations.AutoGenerated;
import com.vaadin.terminal.ExternalResource;
import com.vaadin.terminal.ThemeResource;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.Embedded;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.MenuBar;
import com.vaadin.ui.MenuBar.Command;
import com.vaadin.ui.MenuBar.MenuItem;
import com.vaadin.ui.Panel;
import com.vaadin.ui.VerticalLayout;
import com.vaadin.ui.Window;

public class MainLayout extends CustomComponent {

	@AutoGenerated
	private VerticalLayout mainLayout;
	@AutoGenerated
	private HorizontalLayout horizontalLayout_1;
	@AutoGenerated
	private VerticalToolbar verticalToolbar_1;
	@AutoGenerated
	private ProjectGridScreen projectGridScreen_1;
	@AutoGenerated
	private MenuBar menuBar_1;
	@AutoGenerated
	private Embedded embedded_1;

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	
	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public MainLayout() {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		// TODO add user code here
		
		// Save reference to individual items so we can add sub-menu items to
        // them
		Command menuCommand = new Command(){
			public void menuSelected(MenuItem selectedItem) {
				// TODO Auto-generated method stub
				
			}};
        final MenuBar.MenuItem file = menuBar_1.addItem("File", null);
        final MenuBar.MenuItem newItem = file.addItem("New", null);
        file.addItem("Logout yyyy", new ThemeResource(
                "../runo/icons/16/folder.png"), new Command() {
					public void menuSelected(MenuItem selectedItem) {
						String context = ApplicationHolder.getApplication().getURL().getPath();
						context = context.substring(0, context.lastIndexOf("/app"));
						ApplicationHolder.getApplication().getMainWindow().open(new ExternalResource(context + "/j_spring_security_logout"));
					}});
        file.addSeparator();

        newItem.addItem("File", new ThemeResource(
                "../runo/icons/16/document.png"), menuCommand);
        newItem.addItem("Folder", new ThemeResource(
                "../runo/icons/16/folder.png"), menuCommand);
        newItem.addItem("Project...", new ThemeResource(
                "../runo/icons/16/globe.png"), menuCommand);

        file.addItem("Close", menuCommand);
        file.addItem("Close All", menuCommand);
        file.addSeparator();

        file.addItem("Save", menuCommand);
        file.addItem("Save As...", menuCommand);
        file.addItem("Save All", menuCommand);

        final MenuBar.MenuItem edit = menuBar_1.addItem("Edit", null);
        edit.addItem("Undo", menuCommand);
        edit.addItem("Redo", menuCommand).setEnabled(false);
        edit.addSeparator();

        edit.addItem("Cut", menuCommand);
        edit.addItem("Copy", menuCommand);
        edit.addItem("Paste", menuCommand);
        edit.addSeparator();

        final MenuBar.MenuItem find = edit.addItem("Find/Replace", menuCommand);

        // Actions can be added inline as well, of course
        find.addItem("Google Search", new Command() {
            public void menuSelected(MenuItem selectedItem) {
                getWindow().open(new ExternalResource("http://www.google.com"));
            }
        });
        find.addSeparator();
        find.addItem("Find/Replace...", menuCommand);
        find.addItem("Find Next", menuCommand);
        find.addItem("Find Previous", menuCommand);

        final MenuBar.MenuItem view = menuBar_1.addItem("View",
                new ThemeResource("../runo/icons/16/user.png"), null);
        view.addItem("Show/Hide Status Bar", menuCommand);
        view.addItem("Customize Toolbar...", menuCommand);
        view.addSeparator();

        view.addItem("Actual Size", menuCommand);
        view.addItem("Zoom In", menuCommand);
        view.addItem("Zoom Out", menuCommand);
        
        final MenuBar.MenuItem templates = menuBar_1.addItem("Templates",
                new ThemeResource("../runo/icons/16/user.png"), null);
        templates.addItem("Activities", new Command() {
			@Override
			public void menuSelected(MenuItem selectedItem) {
				Window activitiesWindow = new Window("Template Activities");
				activitiesWindow.setModal(true);
				activitiesWindow.setWidth("800px");
				activitiesWindow.setHeight("400px");
				getWindow().addWindow(activitiesWindow);
				TemplateActivitiesPanel panel = new TemplateActivitiesPanel();
				activitiesWindow.addComponent(panel);
			}});
        
        
	
	}

	@AutoGenerated
	private VerticalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("700px");
		mainLayout.setMargin(false);
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("700px");
		
		// embedded_1
		embedded_1 = new Embedded();
		embedded_1.setImmediate(false);
		embedded_1.setWidth("100.0%");
		embedded_1.setHeight("50px");
		embedded_1.setSource(new ExternalResource(
				"http://localhost:8080/codesizer/img/TopBar.png"));
		embedded_1.setType(1);
		embedded_1.setMimeType("image/png");
		mainLayout.addComponent(embedded_1);
		
		// menuBar_1
		menuBar_1 = new MenuBar();
		menuBar_1.setImmediate(false);
		menuBar_1.setWidth("100.0%");
		menuBar_1.setHeight("-1px");
		mainLayout.addComponent(menuBar_1);
		
		// horizontalLayout_1
		horizontalLayout_1 = buildHorizontalLayout_1();
		mainLayout.addComponent(horizontalLayout_1);
		mainLayout.setExpandRatio(horizontalLayout_1, 1.0f);
		
		return mainLayout;
	}

	@AutoGenerated
	private HorizontalLayout buildHorizontalLayout_1() {
		// common part: create layout
		horizontalLayout_1 = new HorizontalLayout();
		horizontalLayout_1.setImmediate(false);
		horizontalLayout_1.setWidth("100.0%");
		horizontalLayout_1.setHeight("100.0%");
		horizontalLayout_1.setMargin(false);
		
		// projectGridScreen_1
		projectGridScreen_1 = new ProjectGridScreen();
		projectGridScreen_1.setImmediate(false);
		projectGridScreen_1.setWidth("100.0%");
		projectGridScreen_1.setHeight("100.0%");
		horizontalLayout_1.addComponent(projectGridScreen_1);
		horizontalLayout_1.setExpandRatio(projectGridScreen_1, 1.0f);
		
		// verticalToolbar_1
		verticalToolbar_1 = new VerticalToolbar();
		verticalToolbar_1.setImmediate(false);
		verticalToolbar_1.setWidth("85px");
		verticalToolbar_1.setHeight("100.0%");
		horizontalLayout_1.addComponent(verticalToolbar_1);
		horizontalLayout_1.setComponentAlignment(verticalToolbar_1,
				new Alignment(6));
		
		return horizontalLayout_1;
	}

}
